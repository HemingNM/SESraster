% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SESraster.R
\name{SESraster}
\alias{SESraster}
\title{Standardized effect sizes}
\usage{
SESraster(
  x,
  FUN = NULL,
  algorithm = "SIM1",
  FUN_args = NULL,
  alg_args = NULL,
  aleats = 10,
  cores = 1,
  filename = "",
  overwrite = FALSE,
  ...
)
}
\arguments{
\item{x}{SpatRaster. A SpatRaster containing presence-absence data (0 or 1)
for a set of species.}

\item{FUN}{custom function that works with SpatRaster objects. See examples}

\item{algorithm}{character. A character indicating the randomization method.}

\item{FUN_args}{List of arguments passed to the FUN}

\item{alg_args}{List of arguments passed to the randomization method chosen
in 'algorithm'.
See \code{\link{bootspat_naive}}, \code{\link{bootspat_str}}, \code{\link{bootspat_ff}}}

\item{aleats}{positive integer. A positive integer indicating how many times
the calculation should be repeated.}

\item{cores}{positive integer. If \code{cores > 1}, a 'parallel' package cluster with that many cores is created and used. You can also supply a cluster object. Ignored for functions that are implemented by terra in C++ (see under fun)}

\item{filename}{character. Output filename}

\item{overwrite}{logical. If \code{TRUE}, \code{filename} is overwritten}

\item{...}{additional arguments passed to 'terra::app()' function.}
}
\value{
SpatRaster. The function returns the observed metric, the mean of the
simulations calculated over n=aleats times, the standard deviation of the
simulations, and the standardized effect size (SES) for the metric defined in FUN.
}
\description{
Calculates the standardized effect size using a custom function.
}
\details{
Perform n=aleats spatial randomizations based on the randomization
method defined in 'algorithm' argument and calculates the metric
defined in 'FUN' argument. The function (FUN) to calculate the desired metric
must work with any of \link[terra]{app}, \link[terra]{focal},
\link[terra]{focal3D} family of functions.
}
\examples{
library(SESraster)
library(terra)
r <- load_ext_data()
appmean <- function(x, ...){
terra::app(x, "mean", ...)
}
ses <- SESraster(r, FUN=appmean, algorithm = "SIM1", alg_args=list(random="species"))
plot(ses)
ses <- SESraster(r, FUN=appmean, algorithm = "SIM1", alg_args=list(random="site"))
plot(ses)
ses <- SESraster(r, FUN=appmean, algorithm = "SIM1",
                  alg_args=list(random="site"), FUN_args=list(na.rm=TRUE))
plot(ses)

}
\references{
Gotelli 2000
}
\seealso{
\code{\link{bootspat_str}}, \code{\link{bootspat_naive}},
\code{\link{bootspat_ff}}, \code{\link{algorithm_performance}}
}
\author{
Neander M. Heming and Gabriela Alves-Ferreira
}
